/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* insertionSortList(ListNode* head) 
    {   
        //separate the unsorted list, node to be inserted and unsorted list into three separate lists
        if(!head || !head->next)
        {
            return head;
        }
        struct ListNode* inodenext;
        struct ListNode* inode = head->next;
        head->next = NULL;
        while(inode != NULL)
        {
            inodenext = inode->next;
            inode->next = NULL;
            if(inode->val < head->val)
            {
                inode->next = head;
                head = inode;
            }
            else
            {
            struct ListNode* prev = NULL;
            struct ListNode* curr = head;
            while(curr && curr-> val <= inode->val)
            {
                prev = curr;
                curr = curr -> next;
                
            }
            prev -> next = inode;
            inode -> next = curr;
                
            }
            inode = inodenext;
            
            
            
        }
        return head;
        
    }
};
