class Solution {
public:
    int findPairs(vector<int>& nums, int k) 
    {  //O(n) , O(n)
       /*unordered_map<int,int> mp;
        for(int i=0;i<nums.size();i++)
        {
            mp[nums[i]] += 1;
        }
        int count = 0;
        for(auto i:mp)
        {
            int target = i.first + k;
            if(mp.find(target) != mp.end())
            {
                if(target == i.first && mp[target] <2)
                {
                   continue;
                }
                count += 1;
            }
        }
        return count;*/
        
        //binary search nlogn
        /*sort(nums.begin(),nums.end());
        int count = 0;
        for(int i=0;i<nums.size();i++)
        {
            
            if( i == 0 || (i>0 && nums[i] !=nums[i-1]))
            {
            int target = nums[i] + k;
            int start = i + 1;
            int end = nums.size() - 1;
            //cout<<end;    
            while(start <= end)
            {
                int mid = start + (end - start)/2;
                
                if(nums[mid] == target)
                {
                    ++count;
                    //cout<<i;
                    break;
                }
                else if(target < nums[mid])
                {
                    end = mid - 1;
                }
                else
                {
                    start = mid + 1;
                }
            }
               
            }
            
            
        }
        return count;
        */
        //2 pointers
        
        //remove unique elements
        //first pointer first element , second pointer second element 
        //sum < target  || ptr1 == ptr 2 inc window size
        // else decrease window size 
        //skip repeating elments
        
    }
};
