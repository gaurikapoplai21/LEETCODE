/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* bstFromPreorder(vector<int>& preorder) 
    {
        int low = 0;
        int high = preorder.size() - 1;
        struct TreeNode* root = construct_tree(preorder,low,high);
        return root;
        
    }
    int findindex(vector<int>& preorder,int low,int high)
    {
        int index = high + 1;
        for(int i=low+1;i<=high;i++)
        {
            if(preorder[i] > preorder[low])
            {
                index = i;
                return index;
            }
        }
        return index;
    }
    struct TreeNode* construct_tree(vector<int>& preorder,int low,int high)
    {
        if(low>high)
        {
            return NULL;
        }
        struct TreeNode* root = new TreeNode(preorder[low]);
        int index = findindex(preorder,low,high);
        root->left = construct_tree(preorder,low+1,index-1);
        root->right = construct_tree(preorder,index,high);
        return root;
    }
};
