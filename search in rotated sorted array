class Solution {
public:
    int search(vector<int>& nums, int target) 
    {
        //find pivot element -> min element
        int start = 0;
        int end = nums.size() - 1;
        int pivot = -1;
        while(start <= end)
        {
            int mid = (start + end)/2;
            if(nums[mid] > nums[nums.size()-1])
            {
                start = mid + 1;
            }
            else
            {
                end = mid - 1;
            }
        }
        pivot = start;
        //cout<<pivot;
        if(target <= nums[nums.size()-1])
        {
            start = pivot;
            end = nums.size();
        }
        else
        {
            start = 0;
            end = pivot - 1;
        }
        //cout<<start<<end;
        while(start <= end)
        {
            int mid = (start + end)/2;
            //cout<<mid;
            if(nums[mid] == target)
            {
                return mid;
            }
            else if(target < nums[mid])
            {
                end = mid - 1;
            }
            else
            {
                start = mid + 1;
            }
        }
        return -1;
    }
};
