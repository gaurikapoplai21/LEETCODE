class Solution {
public:
    int recurse(vector<int>&cost, int n,vector<int>& dp)
    {
        if(n >= cost.size())
        {
            return 0;
        }
        else if(dp[n] != -1)
        {
            return dp[n];
        }
        dp[n] = cost[n] + min( recurse(cost,n+1,dp),recurse(cost,n+2,dp));
        return dp[n];
    }
    int minCostClimbingStairs(vector<int>& cost) 
    {
        vector<int> dp(cost.size()+1,-1);
        int x = recurse(cost,0,dp);
        int y = recurse(cost,1,dp);
        return min(x,y);
        
    }
};
