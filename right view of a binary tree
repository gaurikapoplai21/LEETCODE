/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<int> rightSideView(TreeNode* root) 
    {
        vector<int> ans;
        if(!root)
        {
            return ans;
        }
        queue<struct TreeNode*> q;
        q.push(root);
        int level = 1;
        int next_level = 0;
        struct TreeNode* temp;
        while(!q.empty())
        {   next_level = 0;
            while(level--)
            {
                temp = q.front();
                q.pop();
                if(temp->left)
                {
                    q.push(temp->left);
                    ++next_level;
                        
                    
                }
                if(temp->right)
                {
                    q.push(temp->right);
                    ++next_level;
                }
                
            }
            ans.push_back(temp->val);
            level = next_level;
            
            
        }
        return ans;
    }
};
