/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) 
    {
        if(!root)
        {
            return NULL;
        }
        queue<struct Node*> q;
        q.push(root);
        int level = 1;
        int next_level = 0;
        struct Node* temp;
        while(!q.empty())
        {
            next_level = 0;
            while(level--)
            {
                temp = q.front();
                q.pop();
                if(temp->left)
                {
                    q.push(temp->left);
                    ++next_level;
                }
                if(temp->right)
                {
                    q.push(temp->right);
                    ++next_level;
                }
                
             temp -> next = q.front();
                
            }
            temp -> next = NULL;
            level = next_level;
        }
        return root;
        
    }
};
