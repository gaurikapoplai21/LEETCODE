class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) 
    {
        int highest = *max_element(nums.begin(),nums.end());
        vector<int> elements(highest);
        for(int i=1;i<=highest;i++)
        {
            elements[i-1] = i;
        }
        int start = 0;
        int end = elements.size()-1;
        int mid;
        int sum;
        while(start<=end)
        {
            mid = (start + end)/2;
            int divisor = elements[mid];
            //cout<<divisor;
            sum = 0;
            for(int i=0;i<nums.size();i++)
            {
                sum += nums[i]/divisor;
                if(nums[i]%divisor != 0)
                {
                    ++sum;
                }
                //cout<<sum;
            }
            //cout<<sum;
            
            if(sum <= threshold)
            {
                end = mid - 1;
            }
            else if(sum > threshold)
            {
                start = mid + 1;
                
            }
        }
        //cout<<elements[end];
        return elements[start];
        
    }
};
