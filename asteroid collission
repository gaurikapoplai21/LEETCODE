class Solution {
public:
    vector<int> asteroidCollision(vector<int>& asteroids) 
    {
        if(asteroids.empty())
        {
            return asteroids;
        }
        vector<int> ans;
        stack<int> stk;
        stk.push(asteroids[0]);
        for(int i=1;i<asteroids.size();i++)
        {
            if(!stk.empty() && asteroids[i] < 0 && stk.top() > 0)
            {   //cout<<stk.top();
                while(!stk.empty() && stk.top() > 0 && stk.top() < abs(asteroids[i]))
                {   
                    //cout<<"hoo";
                    stk.pop();
                }
                if(stk.empty() || (stk.top() < 0))
                {
                    stk.push(asteroids[i]);
                }
                else if(stk.top() && stk.top() == abs(asteroids[i]))
                {   //cout<<"woo";
                    stk.pop();
                }
               
                
            }
            else
            {   
                //cout<<"hoe";
                stk.push(asteroids[i]);
            }
        }
        while(!stk.empty())
        {
            int x = stk.top();
            ans.push_back(x);
            stk.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
    }
};
