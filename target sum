class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int S) 
    {
        int sumarr = accumulate(nums.begin(),nums.end(),0);
        if(S > sumarr)
        {
            return 0;
        }
        int sum = (sumarr + S);
        if(sum%2 == 0)
        {
            sum = sum/2;
        }
        else
        {
            return 0;
        }
        
        vector<vector<int>> dp(nums.size()+1,vector<int>(sum+1,0));
        dp[0][0] = 1;
        //cout<<"ho";
        for(int i=1;i<dp.size();i++)
        {
            for(int j=0;j<dp[0].size();j++)
            {
                if(nums[i-1] > j)
                {
                    dp[i][j] = dp[i-1][j];
                }
                else
                {
                    dp[i][j] = dp[i-1][j] + dp[i-1][j-nums[i-1]];
                }
                //cout<<dp[i][j]<<" ";
            }
            //cout<<"\n";
        }
        return dp[nums.size()][sum];
        
    }
};
