class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) 
    {
        unordered_map<int,int> indegree;
        for(int i=0;i<prerequisites.size();i++)
        {
            indegree[prerequisites[i][0]] += 1;
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++)
        {
            if(indegree[i] == 0)
            {
                q.push(i);
            }
        }
        int count = 0;
        while(!q.empty())
        {
            int node = q.front();
            cout<<node;
            q.pop();
            ++count;
            for(int i=0;i<prerequisites.size();i++)
            {
                if(prerequisites[i][1] == node)
                {
                    indegree[prerequisites[i][0]] -= 1;
                    if(indegree[prerequisites[i][0]] == 0)
                    {
                        q.push(prerequisites[i][0]);
                    }
                }
            }
            
        }
        //cout<<count;
        if(count == numCourses)
        {
            return true;
        }
        return false;
        
    }
};
