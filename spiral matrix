class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) 
    {
        int dir = 0; //0->right 1->down 2->left 3->up
        int l = 0;
        int r = matrix[0].size() - 1;
        int u = 0;
        vector<int> ans;
        int d = matrix.size() - 1;
        
        while(l <= r && u <= d)
        {
            if(dir == 0)
            {
                for(int i=l;i<=r;i++)
                {
                    ans.push_back(matrix[u][i]);
                } 
                ++u;
                dir = 1;
            }
            else if(dir == 1)
            {   
                for(int i=u;i<=d;i++)
                {
                    ans.push_back(matrix[i][r]);
                }
                --r;
                dir = 2;
            }
            else if(dir == 2)
            {
                for(int i=r;i>=l;i--)
                {
                   ans.push_back(matrix[d][i]);
                }
                --d;
                dir = 3;
            }
            else if(dir == 3)
            {   
                for(int i=d;i>=u;i--)
                {
                    ans.push_back(matrix[i][l]);
                }
                ++l;
                dir = 0;
            }
        }
        return ans;
        
    }
};
