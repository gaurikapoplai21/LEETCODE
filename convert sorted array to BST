/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    struct TreeNode* convert(struct TreeNode* root,int start,int end,vector<int>& nums)
    {
       if(start <= end)
       {
           int mid = start + (end-start)/2;
           root = new TreeNode(nums[mid]);
           root->left = convert(root->left,start,mid-1,nums);
           root->right = convert(root->right,mid+1,end,nums);
       }
       return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) 
    {
        if(nums.size() == 0)
        {
            return NULL;
        }
        int start = 0;
        int end = nums.size() - 1;
        struct TreeNode* root;
        root = convert(root,start,end,nums);
        return root;
        
    }
};
