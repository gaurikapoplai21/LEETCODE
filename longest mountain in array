class Solution {
public:
    int longestMountain(vector<int>& A) 
    {
        if(A.size() < 3)
        {
            return 0;
        }
        int mountains = 0;
        int maxmountains = 0;
        int i=0;
        int j = i+1;
        int turns = 0;
        
        while(i < A.size() - 2)
        {
            if(mountains == 0 && turns==0)
            {
                j = i+1;
                if(A[j] <= A[i])
                {
                    i++;
                }
                else
                {
                    j++;
                    mountains = 2;
                    turns = 1;
                }
            }
            else if(mountains > 0 && turns == 1)
            {
                if(j == A.size())
                {
                    return maxmountains;
                }
                if(A[j] > A[j-1])
                {
                    ++mountains;
                    j++;
                }
                else if (A[j] == A[j-1])
                {
                    mountains = 0;
                    i++;
                    turns = 0;
                }
                else if(A[j] < A[j-1])
                {
                    turns = 2;
                    ++mountains;
                    ++j;
                }
                    
            }
            else if(turns == 2)
            {
                if(j == A.size() || A[j] >= A[j-1])
                {   cout<<"yo";
                    maxmountains = max(mountains,maxmountains);
                    mountains = 0;
                    turns = 0;
                    i++;
                }
                else
                {
                    ++mountains;
                    ++j;
                }
            }
            
        }
        return maxmountains;
        
    }
};
