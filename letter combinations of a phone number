class Solution {
public:
    void recurrence(vector<string>& v,string digits,string s,vector<string>& ans,int index)
    {
        if(index == digits.size())
        {
            ans.push_back(s);
            return;
        }
        string letters = v[digits[index] - '0'];
        for(int i=0;i<letters.size();i++)
        {
            s += letters[i];
            recurrence(v,digits,s,ans,index+1);
            s.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) 
    {
        vector<string> ans;
        if(digits.size()==0)
        {
            return ans;
        }
        vector<string> v{"0","1","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        string s = "";
        int index = 0;
        recurrence(v,digits,s,ans,index);
        return ans;
        
    }
};
